openapi: 3.0.0
info:
  title: Shom ads API
  description: Official Shom ads API documentation
  version: 0.1.9

servers:
  - url: http://localhost/shom/ads/backend/public/api
    description: local server
  - url: http://producation.app/api
    description: production server

paths:
  /user:
    post:
      security:
        - bearerAuth: []
      tags:
        - Account
      summary: store user
      description: store user
      operationId: userStore
      requestBody:
        description: create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPost'
        required: true
      responses:
        '200': 
          description: successful
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/userGet'
        '403':
          description: permission       
        '404':
          description: not found
        '409':
          description: conflict
        '422':
          description: validation
    get:
      security:
        - bearerAuth: []
      tags:
        - Account
      summary: list of users
      description: list of users
      operationId: userIndex
      responses:
        '200': 
          description: successful
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/userGet'
        '403':
          description: permission       
        '404':
          description: not found
  /user/{userId}:
    put:
      security:
        - bearerAuth: []
      tags:
        - Account
      summary: user update
      description: user update
      operationId: userUpdate
      parameters:
        - name: userId
          in: path
          description: id of user update
          required: true
          schema:
            type: string
      requestBody:
        description: update a user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPost'
        required: true
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#components/schemas/userGet' 
        '403':
          description: permission
        '404':
          description: not found
        '409':
          description: conflict
        '422':
          description: content
    get:
      security:
        - bearerAuth: []
      tags:
        - Account
      summary: user by id
      description: user by id
      operationId: userShow
      parameters:
        - name: userId
          in: path
          description: id of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                $ref: '#components/schemas/userGet' 
        '403':
          description: permission
        '404':
          description: not found
    delete:
      security:
        - bearerAuth: []
      tags:
        - Account
      summary: user delete
      description: user delete
      operationId: userDestroy
      parameters:
        - name: userId
          in: path
          description: id of user delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful 
        '403':
          description: permission
        '404':
          description: not found
  /auth/signin:
    post:
      tags:
        - Account
      summary: sign in
      description: sign in
      operationId: authSingin
      requestBody:
        description: sign in
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signin'
        required: true
      responses:
        '200': 
          description: successful
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/accessToken'     
        '404':
          description: not found
        '422':
          description: validation
  /auth/isauth:
    get:
      security:
        - bearerAuth: []
      tags:
        - Account
      summary: is auth
      description: is auth
      operationId: authIsauth
      responses:
        '200': 
          description: successful 
        '401':
          description: not auth   
        '404':
          description: not found
        '422':
          description: validation

components:
  schemas:
    userGet:
      type: object
      properties:
        id:
          type: string
        role:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        phone:
          type: string
        phone_verified_at:
          format: date-time
        email:
          type: string
        email_verified_at:
          format: date-time
        last_seen:
          format: date-time
        status:
          type: integer
        created_at:
          format: date-time
        updated_at:
          format: date-time
    userPost:
      type: object
      properties:
        role:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        password:
          type: string
        phone:
          type: string
        email:
          type: string
      required:
        - first_name
        - last_name
    accessToken:
      type: object
      properties:
        user_id:
          type: string
        token:
          type: string
        ip:
          type: string
        device:
          type: string
        expired_at:
          type: string
        updated_at:
          type: string
    signin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer